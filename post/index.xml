<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 小记一下</title><link>/post/</link><description>Recent content in Posts on 小记一下</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 11 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Elasticsearch 知识梳理</title><link>/post/elasticsearch%E7%9F%A5%E8%AF%86%E7%82%B9%E6%A2%B3%E7%90%86/</link><pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><guid>/post/elasticsearch%E7%9F%A5%E8%AF%86%E7%82%B9%E6%A2%B3%E7%90%86/</guid><description>介绍 一个 实时 的 分布式搜索分析 引擎，是一个 非关系型 数据库 特性 高效聚合：支持各种聚合方式 全文检索，分词 相关性评分 集群：天然支持集群，横向扩展简单</description></item><item><title>mysql8 好用特性总结</title><link>/post/mysql8-%E7%89%B9%E6%80%A7/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>/post/mysql8-%E7%89%B9%E6%80%A7/</guid><description>引入 MySQL8 出来好几年了，但是没去了解，一直都在用 5.7 ，上次本杰问我知不知道「窗口函数」，直接老脸一红。 最近看了下相关资料，总结三个 MySQL8 好用的新特性。</description></item><item><title>https 加密传输</title><link>/post/https-%E5%8A%A0%E5%AF%86%E4%BC%A0%E8%BE%93/</link><pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate><guid>/post/https-%E5%8A%A0%E5%AF%86%E4%BC%A0%E8%BE%93/</guid><description>为什么需要加密 http 的内容是明文传输，明文数据会经过中间代理服务器、路由器、通信服务运营商等多个物理节点，如果信息在传输过程中被劫持，传输的内容</description></item><item><title>php 执行时间</title><link>/post/php-exec-time/</link><pubDate>Sat, 20 Jul 2019 00:00:00 +0000</pubDate><guid>/post/php-exec-time/</guid><description>引入 接口一般都有「超时时间」。在LNMP环境中，打开nginx.conf，php.ini，php-fpm.conf，发现里面一堆和时间相关的</description></item><item><title>laravel 如何自动发现包</title><link>/post/php-composer-auto-find/</link><pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate><guid>/post/php-composer-auto-find/</guid><description>引入 laravel 在 5.5 版本以前，服务提供者通过配置文件config/app.php手动注册： &amp;#39;providers&amp;#39; =&amp;gt; [ Intervention\Image\ImageServiceProvider::class, ], laravel &amp;gt;= 5.5已增加包自动发现，这是如何做到的？基于l</description></item><item><title>如何「自动」捕获异常处理</title><link>/post/php-exception/</link><pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate><guid>/post/php-exception/</guid><description>引入 大家都用过 try/catch ，它可以使代码更健壮，捕获错误后也可以触发一些上报机制，比如记日志，邮件提醒等。同时还能带来一些便利，比如使用 laravel 「事务处理」</description></item><item><title>Markdown语法手册</title><link>/post/markdown-syntax/</link><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid>/post/markdown-syntax/</guid><description>&lt;p>本文提供了一个可以在 &lt;code>Hugo&lt;/code> 内容文件中使用的基本Markdown语法示例，还展示了基本 HTML 元素在 &lt;code>Hugo&lt;/code> 主题中是否使用 &lt;code>CSS&lt;/code> 装饰。&lt;/p></description></item></channel></rss>